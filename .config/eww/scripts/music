#!/bin/bash

# ╔╦╗ ╦ ╦ ╔═╗ ╦ ╔═╗
# ║║║ ║ ║ ╚═╗ ║ ║  
# ╩ ╩ ╚═╝ ╚═╝ ╩ ╚═╝

# author	Niraj
# github	niraj998

# ┌─┐┌─┐┌┐┌┌─┐┬┌─┐┬ ┬┬─┐┌─┐┌┬┐┬┌─┐┌┐┌┌─┐
# │  │ ││││├┤ ││ ┬│ │├┬┘├─┤ │ ││ ││││└─┐
# └─┘└─┘┘└┘└  ┴└─┘└─┘┴└─┴ ┴ ┴ ┴└─┘┘└┘└─┘

# uncomment your music players below.
# 

Control="MPD"
[ -n "$(pgrep spotify)" ] && Control="spotify"

# saves covers here
Cover=/tmp/cover.png
# if cover not found in metadata use this instead
bkpCover=~/.config/eww/images/music.png

# ┌─┐┬  ┌─┐┬ ┬┌─┐┬─┐┌─┐┌┬┐┬    ┌─┐┌─┐┬─┐┬┌─┐┌┬┐┌─┐
# ├─┘│  ├─┤└┬┘├┤ ├┬┘│   │ │    └─┐│  ├┬┘│├─┘ │ └─┐
# ┴  ┴─┘┴ ┴ ┴ └─┘┴└─└─┘ ┴ ┴─┘  └─┘└─┘┴└─┴┴   ┴ └─┘

########################## Title ##########################
title() {
title=$(playerctl --player=$Control metadata --format {{title}})
[ -z "$title" ] && title="Play Something"
echo "$title"
}

########################## Artist ##########################
artist() {
artist=$(playerctl --player=$Control metadata --format {{artist}})
[ -z "$artist" ] && artist="Artist"
echo "$artist"
}

########################## Album ##########################
album() {
album=$(playerctl --player=$Control metadata --format {{album}})
[ -z "$album" ] && album="Album"
echo "$album"
}

########################## Status ##########################
status() {
status=$(playerctl --player=$Control status)
[ -z "$status" ] && status="Stopped"
echo "$status"
}

########################## Time ##########################
ctime() {
time=$(playerctl --player=$Control position --format "{{ duration(position) }}")
[ -z "$time" ] && time="0:00"
echo "$time"
}

########################## Length ##########################
length() {
length=$(playerctl --player=$Control metadata --format "{{ duration(mpris:length) }}")
[ -z "$length" ] && length="0:00"
echo "$length"
}

########################## Time Seconds ##########################
ctimeS() {
time=$(playerctl --player=$Control position)
[ -z "$time" ] && time="0"
echo "$time"
}

########################## Length Seconds ##########################
lengthS() {
length=$(playerctl --player=$Control metadata  --format "{{ mpris:length }}")
[ -z "$length" ] && length="0"
length=$(($length/1000000))
echo "$length"
}

########################## trackNumber ##########################
playlist() {
playlist=$(playerctl --player=$Control metadata xesam:trackNumber)
[ -z "$playlist" ] && playlist="0"
echo "$playlist"
}

########################## Cover ##########################
cover() {
albumart="$(playerctl --player=$Control metadata mpris:artUrl | sed -e 's/open.spotify.com/i.scdn.co/g')"
[ $(playerctl --player=$Control metadata mpris:artUrl) ] && curl -s "$albumart" --output $Cover || cp $bkpCover $Cover 
echo "$Cover"
}

########################## Statusicon ##########################
statusicon() {
icon=""
[ $(playerctl --player=$Control status) = "Playing" ] && icon=""
[ $(playerctl --player=$Control status) = "Paused" ] && icon=""
echo "$icon"
}

########################## Percent ##########################
perc() {
time_song="$(ctimeS)"
len_song="$(lengthS)"
divided=$(python -c "print(($time_song/$len_song)*100)")
echo "$divided"
}

############### Set Position With Percentage ##########################
set_position() {
len_song="$(lengthS)"
playerctl position --player=$Control $(python -c "print($1/100*$len_song)")
}

########################## Spotify Volume ######################
sp_volume() {
# value between 0 and 1 
normalized=$(python -c "print($1/101)")
$(playerctl --player=$Control volume $normalized)
}

########################## Lyrics ##########################
lyrics() {
Title=$(playerctl --player=$Control metadata --format {{title}})
Artist=$(playerctl --player=$Control metadata --format {{artist}})
URL="https://api.lyrics.ovh/v1/$Artist/$Title"
lyrics=$(curl -s "$( echo "$URL" | sed s/" "/%20/g | sed s/"&"/%26/g | sed s/,/%2C/g | sed s/-/%2D/g)" | jq '.lyrics' )
[ "$lyrics" = "null" ] && lyrics=$( curl -s --get "https://makeitpersonal.co/lyrics" --data-urlencode "artist=$Artist" --data-urlencode "title=$Title")
printf "$lyrics" | less
}

# ┬ ┬┌─┐┬  ┌─┐
# ├─┤├┤ │  ├─┘
# ┴ ┴└─┘┴─┘┴  

doc() {
echo "Usage:
  music [Options]

Options:
  previous	previous song
  next		next song
  toggle	toggle between play-pause song
  title		shows title of current song
  album		shows album of current song
  artist	shows artist of current song
  status	music status (playing/paused/stopped)
  statusicon	music status icons (playing/paused/stopped)
  coverloc	saves cover and shows location to cover of current song
  showcover	opens cover using feh
  time		shows current time of song
  timeS		shows current time of song in seconds
  length	shows length of song
  lengthS	shows length of song in seconds
  percent	shows percent song
  setposition	sets position in song
  playlist	shows playlist position of current song
  lyrics	shows lyrics"
}

# ┌─┐┌─┐┌┬┐┬┌─┐┌┐┌┌─┐
# │ │├─┘ │ ││ ││││└─┐
# └─┘┴   ┴ ┴└─┘┘└┘└─┘

case $1 in 
  next)		playerctl --player=$Control next	;;
  previous)	playerctl --player=$Control previous	;;
  toggle)		playerctl --player=$Control play-pause	;;
  setposition)	set_position $2				;;
  sp_volume) sp_volume $2 ;;
  help)		doc					;;
esac

while true; do
  case $1 in 
    title)		title					;;
    artist)		artist					;;
    album)		album					;;
    status)		status					;;
    statusicon)	statusicon				;;
    player)		echo "$Control"				;;
    coverloc)	cover					;;
    showcover)	cover | xargs feh 			;;
    time)		ctime 					;;
    timeS)		ctimeS 					;;
    length)		length 					;;
    lengthS)	lengthS 					;;
    percent)	perc				;;
    playlist)	playlist				;;
    lyrics)		lyrics					;;
  esac
  sleep 1
done
